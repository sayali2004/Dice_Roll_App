pipeline {
    agent any

    environment {
        FLUTTER_HOME = "/opt/flutter"
        JAVA_HOME = "/usr/lib/jvm/java-17-openjdk-amd64"
        ANDROID_SDK_ROOT = "/opt/android-sdk"
        PATH = "${FLUTTER_HOME}/bin:${ANDROID_SDK_ROOT}/cmdline-tools/latest/bin:${env.PATH}"
        MY_ENV_VAR = "Custom Value for Flutter Build"
        JAVA_OPTS = "-Dorg.jenkinsci.plugins.durabletask.BourneShellScript.HEARTBEAT_CHECK_INTERVAL=86400"
DART_VM_OPTIONS = "--disable-service-auth-codes"
    }

    stages {
        stage('Checkout') {
            steps {
                git url: 'https://github.com/sayali2004/Dice_Roll_App.git', branch: 'main'
            }
        }

        stage('Flutter Version') {
            steps {
                sh 'flutter --version'
            }
        }

        stage('Accept Android Licenses') {
            steps {
                sh 'yes | flutter doctor --android-licenses'
                // Or use this if flutter fails:
                // sh '${ANDROID_SDK_ROOT}/cmdline-tools/latest/bin/sdkmanager --licenses'
            }
        }

        stage('Clean Build') {
            steps {
                sh 'flutter clean'
            }
        }

        stage('Install Dependencies') {
            steps {
                sh 'flutter pub get'
            }
        }

        stage('Analyze Code') {
            steps {
                sh 'flutter analyze'
            }
        }

        stage('Run Tests') {
            steps {
                sh 'flutter test'
            }
        }

        stage('Build APK') {
            steps {
                // Debug info (optional)
                sh '''
                    echo "üì¶ Building APK..."
                    echo "üìÇ Current Dir: $(pwd)"
                    echo "üõ† JAVA_HOME: $JAVA_HOME"
                    echo "üì± FLUTTER_HOME: $FLUTTER_HOME"
                '''
                sh 'flutter build apk --release'
            }
        }

        stage('Archive APK') {
            steps {
                archiveArtifacts artifacts: 'build/app/outputs/flutter-apk/app-release.apk', fingerprint: true
            }
        }
    }

    post {
        always {
            echo 'üìå Pipeline execution complete.'
        }
        success {
            echo '‚úÖ Build succeeded!'
        }
        failure {
            echo '‚ùå Build failed.'
        }
    }
}
